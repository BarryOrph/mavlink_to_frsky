A board to read data from the Ardupilot using Mavlink protocol and 
convert it into a lightweight data protocol for the FrSky Telemetry RC receiver for my Antenna tracker project.

The code is available under the GNU GPL license http://www.gnu.org/licenses/gpl.txt

The recommended version is now the arduino version (in the arduino subdirectory). 
This version uses the Arduino Nano, Arduino Micro or Arduino Pro mini boards, which are available quite cheaply and
reduce costs and simplify the buidling the airborne side of the Antenan Tracker project.


---------------------Notes on the original STM32F4 version------------------------------------------------------------

You may wish to try the Application first using the stm32f4 Discovery board.

Since some pins are already taken on the Discovery Board a different set of pins is used,
The discovery_main.bin file (https://github.com/kwikius/mavlink_to_frsky/blob/master/discovery_main.bin)
is prebuilt for the Discovery board, 
while the target_main.bin file  (https://github.com/kwikius/mavlink_to_frsky/blob/master/target_main.bin) 
is prebuilt for flashing the target board. 

See "resources.hpp" (https://github.com/kwikius/mavlink_to_frsky/blob/master/resources.hpp)
for the pins used for each version
---------------------------------------------------------------------------------
To build the Discovery version either use "make Discovery" on the command line or see "config.hpp" for #defines
To build the version for the target use "make" with no arguments on the command line or see "config.hpp" for #defines

To build the application requires the following prerequisites.
( You will need to modify the MakeFile (https://github.com/kwikius/mavlink_to_frsky/blob/master/Makefile)
to the paths where you have installed these components )

	***C++ compiler for ARM which conforms to the C++11 standard. ***
	(N.B.Only tested on gcc4.7,gcc4.7.1,gcc4.7.2. If you test another compiler please report any issues) 

		https://launchpad.net/gcc-arm-embedded

			Select gcc4.7

		or
		
		https://github.com/prattmic/arm-cortex-m4-hardfloat-toolchain

			(You will need to modify the Makefile to enable C++)

		or

		https://github.com/esden/summon-arm-toolchain

			(Not tested by me)


	***STM32F4 standard peripherals library***
	
		http://www.st.com/internet/com/SOFTWARE_RESOURCES/SW_COMPONENT/FIRMWARE/stm32f4_dsp_stdperiph_lib.zip

	***quan physical quantities library***

		https://github.com/kwikius/quan-trunk

	***Mavlink protocol library***

		https://github.com/mavlink/mavlink/downloads
	
--------------------------------------------------------------






